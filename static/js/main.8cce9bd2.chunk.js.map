{"version":3,"sources":["components/helpButton/HelpButton.js","components/gain/Gain.js","context/context.js","components/chartAnswer/ChartAnswer.js","components/game/Game.js","components/gameOver/GameOver.js","components/start/Start.js","components/app/App.js","index.js"],"names":["HelpButton","onHandleGroupeHelp","onHandleHalf","isCompleted","isCompletedРHalf","useEffect","elem","document","querySelector","setAttribute","elem2","className","onClick","Gain","props","onhandleGroupeHelp","showChartAnswer","arr","data","isMobile","togleMenu","type","sort","a","b","price","map","key","id","includes","viewBox","d","priceContext","createContext","PriceContextProvider","useState","prices","setPrices","Provider","value","setWinPrice","amount","children","getRandomInt","min","max","Math","ceil","floor","random","numB","numC","numD","numA","CustomToolTip","active","label","answers","variant","answer_text","getIntroOfPage","ChartAnswer","window","addEventListener","removeEventListener","name","uv","pv","amt","renderBarChart","width","height","dataKey","stroke","domain","content","strokeDasharray","fill","barSize","fontSize","Game","listQuestions","JSON","parse","stringify","curentQuestion","setCurentQuestion","question","setQuestion","setIsMobile","isLaptop","setIslaptop","isMenu","setMenu","idAnswers","setIdAnswers","curentAnswer","setCurentAnswer","setCahrtAnswer","setCompleted","setCompletedHalf","history","useHistory","useContext","size","setSize","useLayoutEffect","updateSize","innerWidth","rigth_answer","prev","concat","setTimeout","length","push","e","target","clearQuestion","rightAnswer","first","getRightAnswer","li","closest","innerHTML","shortid","GameOver","src","alt","Start","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8cce9bd2.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./HelpButton.css\";\r\n\r\nconst HelpButton = ({\r\n  onHandleGroupeHelp,\r\n  onHandleHalf,\r\n  isCompleted,\r\n  isCompletedРHalf,\r\n}) => {\r\n  useEffect(() => {\r\n    const elem = document.querySelector(\".btn-helpGroup\");\r\n    if (isCompleted) {\r\n      elem.setAttribute(\"disabled\", \"true\");\r\n    }\r\n  }, [isCompleted]);\r\n  \r\n  useEffect(() => {\r\n    const elem2 = document.querySelector(\".btn-half\");\r\n    if (isCompletedРHalf) {\r\n      elem2.setAttribute(\"disabled\", \"true\");\r\n    }\r\n  }, [isCompletedРHalf]);\r\n\r\n  return (\r\n    <div className=\"block-button\">\r\n      <button\r\n        className={\r\n          !isCompletedРHalf ? \"btn-half btn \" : \"btn-half btn-remove completed\"\r\n        }\r\n        onClick={onHandleHalf}\r\n      ></button>\r\n      <button\r\n        className={\r\n          !isCompleted\r\n            ? \"btn-helpGroup btn\"\r\n            : \"btn-helpGroup btn-remove completed\"\r\n        }\r\n        onClick={onHandleGroupeHelp}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpButton;\r\n","import React from \"react\";\r\nimport \"./Gain.css\";\r\nimport data from \"../../data.json\";\r\nimport HelpButton from \"../helpButton/HelpButton\";\r\n\r\nconst Gain = (props) => {\r\nconst {\r\n  onhandleGroupeHelp,\r\n  onHandleHalf,\r\n  showChartAnswer,\r\n  isCompleted,\r\n  isCompletedРHalf,\r\n} = props;\r\n// console.log(props);\r\n  const arr = [...[], ...data];\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"block-gain slideInRight\">\r\n        {props.isMobile && (\r\n          <button\r\n            onClick={props.togleMenu}\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n          ></button>\r\n        )}\r\n        <ul className=\"gain\">\r\n          {arr\r\n            .sort((a, b) => b.price - a.price)\r\n            .map((elem) => (\r\n              <li key={elem.id} id={\"answer\" + elem.id} className=\"gain-item\">\r\n                <svg\r\n                  className={\r\n                    props.data.includes(elem.id)\r\n                      ? \"svg-gain-change\"\r\n                      : \"svg-gain\"\r\n                  }\r\n                  viewBox=\"0 0 240 40\"\r\n                >\r\n                  <path d=\"M13.4526 4.63788C15.6376 2.01596 18.8742 0.5 22.2872 0.5H217.713C221.126 0.5 224.362 2.01597 226.547 4.63788L239.349 20L226.547 35.3621C224.362 37.984 221.126 39.5 217.713 39.5H22.2872C18.8742 39.5 15.6376 37.984 13.4526 35.3621L0.650853 20L13.4526 4.63788Z\" />\r\n                </svg>\r\n                <p>${elem.price}</p>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n        <HelpButton\r\n          onHandleGroupeHelp={onhandleGroupeHelp}\r\n          onHandleHalf={onHandleHalf}\r\n          showChartAnswer={showChartAnswer}\r\n          isCompleted={isCompleted}\r\n          isCompletedРHalf={isCompletedРHalf}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gain;\r\n","import React, { createContext, useState } from \"react\";\r\nexport const priceContext = createContext();\r\n\r\nexport const PriceContextProvider = (props) => {\r\n  const [prices, setPrices] = useState(0);\r\n  const setWinPrice = (amount) => {\r\n    setPrices(amount);\r\n  };\r\n  return (\r\n    <priceContext.Provider value={{ prices, setWinPrice }}>\r\n      {props.children}\r\n    </priceContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport \"./ChartAnswer.css\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid } from \"recharts\";\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n}\r\nconst numA = getRandomInt(0, 400);\r\nconst maxB = 400 - numA;\r\nlet numB;\r\nif (numA <400) {\r\n  numB = getRandomInt(0, maxB);\r\n} else {\r\n  numB = 0;\r\n}\r\nconst maxC = 400 - (numB + numA);\r\nlet numC;\r\nif ((numA + numB) < 400) {\r\n  numC = getRandomInt(0, maxC);\r\n} else {\r\n  numC = 0;\r\n}\r\nconst maxD = 400 - (numB + numA + numC);\r\nlet numD;\r\nif (numA + numB < 400) {\r\n numD = getRandomInt(0, maxD);\r\n} else {\r\n  numD = 0;\r\n}\r\n\r\nconst ChartAnswer = ({ answers, onClick }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", onClick);\r\n    return () => window.removeEventListener(\"click\", onClick);\r\n  });\r\n\r\n  const data = [\r\n    { name: answers[0].variant, uv: numA, pv: 2400, amt: 2400 },\r\n    { name: answers[1].variant, uv: numB, pv: 2400, amt: 2400 },\r\n    { name: answers[2].variant, uv: numC, pv: 2400, amt: 2400 },\r\n    { name: answers[3].variant, uv: numD, pv: 2400, amt: 2400 },\r\n  ];\r\n\r\n  const renderBarChart = (\r\n    <BarChart width={450} height={300} data={data}>\r\n      <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\r\n      <YAxis domain={[0, 400]} />\r\n      <Tooltip content={<CustomToolTip answers={answers} />} />\r\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n      <Bar\r\n        dataKey=\"uv\"\r\n        fill=\"#8884d8\"\r\n        barSize={30}\r\n        label={{ fill: \"red\", fontSize: 20 }}\r\n      />\r\n    </BarChart>\r\n  );\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"chart\">{renderBarChart}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomToolTip = ({ active, label, answers }) => {\r\n  \r\n  const getIntroOfPage = (label) => {\r\n    if (label === answers[0].variant) {\r\n      return `A: ${answers[0].answer_text}`;\r\n    } else if (label === answers[1].variant) {\r\n      return `B: ${answers[1].answer_text}`;\r\n    } else if (label === answers[2].variant) {\r\n      return `C: ${answers[2].answer_text}`;\r\n    } else if (label === answers[3].variant) {\r\n      return `D: ${answers[3].answer_text}`;\r\n    }\r\n  };\r\n  if (active) {\r\n    return (\r\n      <div>\r\n        <p>{getIntroOfPage(label)}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default ChartAnswer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, useContext, useLayoutEffect } from \"react\";\r\nimport Gain from \"../gain/Gain\";\r\nimport \"./Game.css\";\r\nimport data from \"../../data.json\";\r\nimport shortid from \"shortid\";\r\nimport { priceContext } from \"../../context/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChartAnswer from \"../chartAnswer/ChartAnswer\";\r\n\r\nconst Game = () => {\r\n  let listQuestions = JSON.parse(JSON.stringify(data));\r\n  const [curentQuestion, setCurentQuestion] = useState(0);\r\n  const [question, setQuestion] = useState(listQuestions[curentQuestion]);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [isLaptop, setIslaptop] = useState(false);\r\n  const [isMenu, setMenu] = useState(false);\r\n  const [idAnswers, setIdAnswers] = useState([]);\r\n  const [curentAnswer, setCurentAnswer] = useState(\"\");\r\n  const [showChartAnswer, setCahrtAnswer] = useState(false);\r\n  const [isCompleted, setCompleted] = useState(false);\r\n  const [isCompletedРHalf, setCompletedHalf] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const { setWinPrice } = useContext(priceContext);\r\n\r\n  const [size, setSize] = useState(0);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (size < 768) {\r\n      setIslaptop(false);\r\n      setIsMobile(true);\r\n    } else if (size > 767 && size < 1023) {\r\n      setIsMobile(true);\r\n      setIslaptop(false);\r\n    } else {\r\n      setIsMobile(false);\r\n      setIslaptop(true);\r\n    }\r\n  }, [size]);\r\n\r\n  useEffect(() => {\r\n    if (curentAnswer === question.rigth_answer) {\r\n      setIdAnswers((prev) => prev.concat([question.id]));\r\n      setWinPrice(question.price);\r\n      setTimeout(() => {\r\n        if (curentQuestion === listQuestions.length - 1) {\r\n          history.push(\"/gameover\");\r\n        } else {\r\n          setCurentQuestion((prev) => prev + 1);\r\n        }\r\n      }, 1000);\r\n    } else if (curentAnswer !== \"\") {\r\n      setTimeout(() => {\r\n        history.push(\"/gameover\");\r\n      }, 2000);\r\n    }\r\n  }, [curentAnswer]);\r\n\r\n  useEffect(() => {\r\n    setCurentAnswer(\"\");\r\n    setQuestion(listQuestions[curentQuestion]);\r\n  }, [curentQuestion]);\r\n\r\n  const togleMenu = (e) => {\r\n    if (e.target.className === \"btn-close\" || \"menu-btn-open\") {\r\n      setMenu(!isMenu);\r\n    }\r\n  };\r\n\r\n  const onHandleGroupeHelp = (e) => {\r\n    setCahrtAnswer(true);\r\n  };\r\n  const closeModalChart = (e) => {\r\n    if (e.target.className === \"backdrop\") {\r\n      setCahrtAnswer(false);\r\n      setCompleted(true);\r\n    }\r\n  };\r\n\r\n  const onHandleHalf = (e) => {\r\n    setCompletedHalf(true);\r\n    clearQuestion();\r\n    clearQuestion();\r\n  };\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n  const clearQuestion = () => {\r\n    let rightAnswer = question.rigth_answer;\r\n    let first = getRandomInt(0, 4);\r\n    if (\r\n      question.answers[first].variant === rightAnswer ||\r\n      question.answers[first].answer_text === \"\"\r\n    ) {\r\n      clearQuestion();\r\n      return;\r\n    }\r\n    question.answers[first].answer_text = \"\";\r\n  };\r\n  const getRightAnswer = (e) => {\r\n    const li = e.target.closest(\"li\");\r\n    setCurentAnswer(li.querySelector(\"p span\").innerHTML);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showChartAnswer && (\r\n        <ChartAnswer answers={question.answers} onClick={closeModalChart} />\r\n      )}\r\n      {!isMenu ? (\r\n        <div className=\"container\">\r\n          <div className=\"game-page \">\r\n            {isMobile && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={togleMenu}\r\n                className={isMenu ? \"btn-close\" : \"menu-btn-open\"}\r\n              ></button>\r\n            )}\r\n            <div className=\"wrapp-answers-quest\">\r\n              <div className=\"img-million\"></div>\r\n              <p className=\"question\">{question.question}</p>\r\n\r\n              <ul className=\"block-answers\">\r\n                {question.answers.map((elem) => (\r\n                  <li\r\n                    key={shortid()}\r\n                    className=\"answer\"\r\n                    onClick={getRightAnswer}\r\n                  >\r\n                    <svg\r\n                      className={\r\n                        curentAnswer === \"\" || curentAnswer !== elem.variant\r\n                          ? \"svg-mob\"\r\n                          : curentAnswer === question.rigth_answer\r\n                          ? \"correct-answer\"\r\n                          : \"invalid\"\r\n                      }\r\n                      viewBox=\"0 0 288 56\"\r\n                    >\r\n                      <path d=\"M16.8175 5.31576C18.9762 2.29361 22.4615 0.5 26.1754 0.5H261.825C265.539 0.5 269.024 2.29361 271.183 5.31576L287.386 28L271.183 50.6842C269.024 53.7064 265.539 55.5 261.825 55.5H26.1754C22.4615 55.5 18.9762 53.7064 16.8175 50.6842L0.614452 28L16.8175 5.31576Z\" />\r\n                    </svg>\r\n                    <p>\r\n                      <span>{elem.variant}</span> {elem.answer_text}\r\n                    </p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            {isLaptop && (\r\n              <Gain\r\n                data={idAnswers}\r\n                isMobile={isMobile}\r\n                onhandleGroupeHelp={onHandleGroupeHelp}\r\n                onHandleHalf={onHandleHalf}\r\n                showChartAnswer={showChartAnswer}\r\n                isCompleted={isCompleted}\r\n                isCompletedРHalf={isCompletedРHalf}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"block-menu-game\">\r\n          <Gain\r\n            data={idAnswers}\r\n            isMobile={isMobile}\r\n            togleMenu={togleMenu}\r\n            onhandleGroupeHelp={onHandleGroupeHelp}\r\n            onHandleHalf={onHandleHalf}\r\n            showChartAnswer={showChartAnswer}\r\n            isCompleted={isCompleted}\r\n            isCompletedРHalf={isCompletedРHalf}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useContext } from \"react\";\r\nimport \"./GameOver.css\";\r\nimport { priceContext } from \"../../context/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GameOver = () => {\r\n  const { prices, setWinPrice } = useContext(priceContext);\r\n  let history = useHistory();\r\n  const handleClick = () => {\r\n    setWinPrice(0);\r\n    history.push(\"/game\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"gameover-page\">\r\n        <div className=\"gameover__img\">\r\n          <img src=\"/image/Group 265.png\" alt=\"img\" />\r\n        </div>\r\n        <div className=\"block-gameover\">\r\n          <span className=\"block-gameover__total\">Total score:</span>\r\n          <span className=\"block-gameover__earned\">${prices} earned</span>\r\n          <button className=\"block-gameover__btn\" onClick={handleClick}>\r\n            Try again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React from \"react\";\r\nimport \"./Start.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Start = () => {\r\n  let history = useHistory();\r\n  const handleStartSubmit = () => {\r\n    history.push(\"/game\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"start-page\">\r\n        <div className=\"start-page__img\">\r\n          <img src=\"/image/logo.png\" alt=\"img\" />\r\n        </div>\r\n        <div className=\"block-begin\">\r\n          <h1 className=\"block-begin__title\">Who wants to be a millionaire?</h1>\r\n          <button\r\n            className=\"block-begin__btn\"\r\n            type=\"button\"\r\n            onClick={handleStartSubmit}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\nimport Game from \"../game/Game\";\r\nimport GameOver from \"../gameOver/GameOver\";\r\nimport Start from \"../start/Start\";\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Start} />\r\n        <Route path=\"/game\" component={Game} />\r\n        <Route path=\"/gameover\" component={GameOver} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PriceContextProvider } from \"./context/context\";\n\nReactDOM.render(\n  <PriceContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </PriceContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}